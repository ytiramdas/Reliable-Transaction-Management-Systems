# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import pbft_pb2 as pbft__pb2

GRPC_GENERATED_VERSION = '1.67.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in pbft_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class PBFTServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendTransaction = channel.unary_unary(
                '/PBFTService/SendTransaction',
                request_serializer=pbft__pb2.Transaction.SerializeToString,
                response_deserializer=pbft__pb2.TransactionStatus.FromString,
                _registered_method=True)
        self.PrePrepare = channel.unary_unary(
                '/PBFTService/PrePrepare',
                request_serializer=pbft__pb2.PrePrepareMessage.SerializeToString,
                response_deserializer=pbft__pb2.PrepareResponse.FromString,
                _registered_method=True)
        self.Prepare = channel.unary_unary(
                '/PBFTService/Prepare',
                request_serializer=pbft__pb2.PreparedMessage.SerializeToString,
                response_deserializer=pbft__pb2.CommitResponse.FromString,
                _registered_method=True)
        self.Commit = channel.unary_unary(
                '/PBFTService/Commit',
                request_serializer=pbft__pb2.CommittedMessage.SerializeToString,
                response_deserializer=pbft__pb2.CommittedResponse.FromString,
                _registered_method=True)
        self.SetActiveStatus = channel.unary_unary(
                '/PBFTService/SetActiveStatus',
                request_serializer=pbft__pb2.SetActiveStatusRequest.SerializeToString,
                response_deserializer=pbft__pb2.SetActiveStatusResponse.FromString,
                _registered_method=True)
        self.SetByzantineStatus = channel.unary_unary(
                '/PBFTService/SetByzantineStatus',
                request_serializer=pbft__pb2.SetByzantineStatusRequest.SerializeToString,
                response_deserializer=pbft__pb2.SetByzantineStatusResponse.FromString,
                _registered_method=True)
        self.PrintLog = channel.unary_unary(
                '/PBFTService/PrintLog',
                request_serializer=pbft__pb2.PrintLogRequest.SerializeToString,
                response_deserializer=pbft__pb2.PrintResponse.FromString,
                _registered_method=True)
        self.PrintDB = channel.unary_unary(
                '/PBFTService/PrintDB',
                request_serializer=pbft__pb2.PrintDBRequest.SerializeToString,
                response_deserializer=pbft__pb2.PrintResponse.FromString,
                _registered_method=True)
        self.PrintStatus = channel.unary_unary(
                '/PBFTService/PrintStatus',
                request_serializer=pbft__pb2.PrintStatusRequest.SerializeToString,
                response_deserializer=pbft__pb2.PrintResponse.FromString,
                _registered_method=True)
        self.Reset = channel.unary_unary(
                '/PBFTService/Reset',
                request_serializer=pbft__pb2.ResetRequest.SerializeToString,
                response_deserializer=pbft__pb2.ResetResponse.FromString,
                _registered_method=True)


class PBFTServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PrePrepare(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Prepare(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Commit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetActiveStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetByzantineStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PrintLog(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PrintDB(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PrintStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Reset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PBFTServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.SendTransaction,
                    request_deserializer=pbft__pb2.Transaction.FromString,
                    response_serializer=pbft__pb2.TransactionStatus.SerializeToString,
            ),
            'PrePrepare': grpc.unary_unary_rpc_method_handler(
                    servicer.PrePrepare,
                    request_deserializer=pbft__pb2.PrePrepareMessage.FromString,
                    response_serializer=pbft__pb2.PrepareResponse.SerializeToString,
            ),
            'Prepare': grpc.unary_unary_rpc_method_handler(
                    servicer.Prepare,
                    request_deserializer=pbft__pb2.PreparedMessage.FromString,
                    response_serializer=pbft__pb2.CommitResponse.SerializeToString,
            ),
            'Commit': grpc.unary_unary_rpc_method_handler(
                    servicer.Commit,
                    request_deserializer=pbft__pb2.CommittedMessage.FromString,
                    response_serializer=pbft__pb2.CommittedResponse.SerializeToString,
            ),
            'SetActiveStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.SetActiveStatus,
                    request_deserializer=pbft__pb2.SetActiveStatusRequest.FromString,
                    response_serializer=pbft__pb2.SetActiveStatusResponse.SerializeToString,
            ),
            'SetByzantineStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.SetByzantineStatus,
                    request_deserializer=pbft__pb2.SetByzantineStatusRequest.FromString,
                    response_serializer=pbft__pb2.SetByzantineStatusResponse.SerializeToString,
            ),
            'PrintLog': grpc.unary_unary_rpc_method_handler(
                    servicer.PrintLog,
                    request_deserializer=pbft__pb2.PrintLogRequest.FromString,
                    response_serializer=pbft__pb2.PrintResponse.SerializeToString,
            ),
            'PrintDB': grpc.unary_unary_rpc_method_handler(
                    servicer.PrintDB,
                    request_deserializer=pbft__pb2.PrintDBRequest.FromString,
                    response_serializer=pbft__pb2.PrintResponse.SerializeToString,
            ),
            'PrintStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.PrintStatus,
                    request_deserializer=pbft__pb2.PrintStatusRequest.FromString,
                    response_serializer=pbft__pb2.PrintResponse.SerializeToString,
            ),
            'Reset': grpc.unary_unary_rpc_method_handler(
                    servicer.Reset,
                    request_deserializer=pbft__pb2.ResetRequest.FromString,
                    response_serializer=pbft__pb2.ResetResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'PBFTService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('PBFTService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class PBFTService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PBFTService/SendTransaction',
            pbft__pb2.Transaction.SerializeToString,
            pbft__pb2.TransactionStatus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PrePrepare(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PBFTService/PrePrepare',
            pbft__pb2.PrePrepareMessage.SerializeToString,
            pbft__pb2.PrepareResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Prepare(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PBFTService/Prepare',
            pbft__pb2.PreparedMessage.SerializeToString,
            pbft__pb2.CommitResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Commit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PBFTService/Commit',
            pbft__pb2.CommittedMessage.SerializeToString,
            pbft__pb2.CommittedResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetActiveStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PBFTService/SetActiveStatus',
            pbft__pb2.SetActiveStatusRequest.SerializeToString,
            pbft__pb2.SetActiveStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetByzantineStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PBFTService/SetByzantineStatus',
            pbft__pb2.SetByzantineStatusRequest.SerializeToString,
            pbft__pb2.SetByzantineStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PrintLog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PBFTService/PrintLog',
            pbft__pb2.PrintLogRequest.SerializeToString,
            pbft__pb2.PrintResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PrintDB(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PBFTService/PrintDB',
            pbft__pb2.PrintDBRequest.SerializeToString,
            pbft__pb2.PrintResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PrintStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PBFTService/PrintStatus',
            pbft__pb2.PrintStatusRequest.SerializeToString,
            pbft__pb2.PrintResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Reset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/PBFTService/Reset',
            pbft__pb2.ResetRequest.SerializeToString,
            pbft__pb2.ResetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
